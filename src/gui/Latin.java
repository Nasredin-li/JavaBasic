/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;

import gui.FileNameChecking;

/**
 *
 * @author Pshenichniy
 */
public class Latin extends javax.swing.JFrame {
	File fileName;
	String[] instructions = {
			"Past  or write the folder path, what you need to check files \nnames if they have a Cyrillic characters",
			"Output files names list in left pane \nif pasted or written the folder path is correct",
			"Change Cyrillic Characters Similar to Latin Characters. It will compare \n file name "
					+ "with NOT_LATIN_SYMBOL (ÀÂÑÅÍ²ÊÌÎÐÒÕÓÇàñå³êìîðõó¹ ) \nahd change to SHORT_LATIN_SYMBOL"
					+ "(ABCEHIKMOPTXY3aceikmopxyN_)",
			"Remove NonLatin characters. It will compare file name with LATIN_SYMBOL\n"
					+ "(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\n-_@&$#~(){}1234567890)"
					+ "and remove missing characters",
			"Change Cyrillic Characters Similar to Latin characters. It will compare \nfile name "
					+ "with NOT_LATIN_SYMBOL (ÀÂÑÅÍ²ÊÌÎÐÒÕÓÇàñå³êìîðõó¹ )\n& change to SHORT_LATIN_SYMBOL"
					+ "(ABCEHIKMOPTXY3aceikmopxyN_)\n& Remove NonLatin Characters. It will compare file name with \nLATIN_SYMBOL"
					+ "(ABCDEFGHIJKLMNOPQRSTUVWXYZ\nabcdefghijklmnopqrstuvwxyz-_@&$#~(){}1234567890)\n"
					+ "and remove missing characters",
			"Pasted path folder files list", " \n\n           THIS FOLDER HASE LATIN FILE NAMES ONLY! " };

	/**
	 * Creates new form Latin
	 */
	public Latin() {
		initComponents();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		fileNamesListText = new javax.swing.JTextArea();
		jTextField1 = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jScrollPane2 = new javax.swing.JScrollPane();
		jList1 = new javax.swing.JList();
		jScrollPane3 = new javax.swing.JScrollPane();
		textMouseOn = new javax.swing.JTextArea();

		fileNamesListText.setColumns(20);
		fileNamesListText.setRows(5);
		jScrollPane1.setViewportView(fileNamesListText);
		fileNamesListText.addMouseListener(mouseOn(instructions[5]));
		fileNamesListText.setEditable(false);

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTextField1.setForeground(new java.awt.Color(102, 102, 102));
		jTextField1.setText("Past or write the folder path");
		jTextField1.setName("path"); // NOI18N
		jTextField1.addMouseListener(mouseOn(instructions[0]));

		jButton1.setText("Check Files Names");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton1.addMouseListener(mouseOn(instructions[1]));
		// addMouseListener(this);

		jButton2.setText("Change Similar to Latin");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});
		jButton2.addMouseListener(mouseOn(instructions[2]));

		jButton3.setText("Remove NonLatin");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});
		jButton3.addMouseListener(mouseOn(instructions[3]));

		jButton4.setText("<html><strong>Change Similar & Remove NonLatin</strong></html>");
		jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});
		jButton4.addMouseListener(mouseOn(instructions[4]));

		/*
		 * jList1.setModel(new javax.swing.AbstractListModel() { String[]
		 * strings = {"1"};
		 * 
		 * public int getSize() { return strings.length; }
		 * 
		 * public Object getElementAt(int i) { return strings[i]; } });
		 */
		jScrollPane2.setViewportView(jList1);

		textMouseOn.setColumns(20);
		textMouseOn.setRows(5);
		textMouseOn.setBackground(new java.awt.Color(229, 232, 235));
		textMouseOn.setEditable(false);
		// textMouseOn.addMouseListener(mouseOn(instructions[6]));
		jScrollPane3.setViewportView(textMouseOn);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane3).addComponent(jTextField1)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
										.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
										.addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
				.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(0, 12, Short.MAX_VALUE).addComponent(jButton1)
								.addGap(18, 18, 18).addComponent(jButton2).addGap(18, 18, 18).addComponent(jButton3)
								.addGap(18, 18, 18).addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addComponent(jScrollPane2))
				.addGap(18, 18, 18).addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(4, 4, 4)));

		pack();
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	private MouseListener mouseOn(String instructions2) {
		return new MouseListener() {

			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseEntered(MouseEvent e) {
				textMouseOn.setText(instructions2);

			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub

			}

		};
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		if (pathAdaptation() == null) {
			return;
		}
		fileName = new File(pathAdaptation());
		renameToLatin(0);

		jList1.setModel(new javax.swing.AbstractListModel() {
			String[] strings = fileName.list();

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});

		jButton2.setEnabled(true);
		jButton2.setText("Change similar to latin");
		jButton3.setEnabled(true);
		jButton3.setText("Remove NonLatin");
		jButton4.setEnabled(true);
		jButton4.setText("<html><strong>Change Similar & Remove NonLatin</strong></html>");
	}// GEN-LAST:event_jButton1ActionPerformed

	private String pathAdaptation() {
		String path = jTextField1.getText();

		if (path.equals("Past or write the folder path") || new File(path).isDirectory() == false) {
			jTextField1.setForeground(new Color(255, 0, 0));
			return null;
		} else {
			path = jTextField1.getText().replace('\\', '/');
			if (path.endsWith("/") == false) {
				path = path + "/";
			}
			jTextField1.setForeground(new Color(102, 102, 102));
		}
		return path;
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		if (pathAdaptation() == null) {
			return;
		}
		fileName = new File(pathAdaptation());

		renameToLatin(1);
		jButton2.setText("changed!");
		jButton2.setEnabled(false);
	}// GEN-LAST:event_jButton2ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		if (pathAdaptation() == null) {
			return;
		}
		fileName = new File(pathAdaptation());
		renameToLatin(2);
		jButton3.setText("removed!");
		jButton2.setEnabled(false);
		jButton3.setEnabled(false);
		jButton4.setEnabled(false);
	}// GEN-LAST:event_jButton3ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		if (pathAdaptation() == null) {
			return;
		}
		fileName = new File(pathAdaptation());
		renameToLatin(3);
		jButton4.setText("changed & removed");
		jButton2.setEnabled(false);
		jButton3.setEnabled(false);
		jButton4.setEnabled(false);

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Latin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Latin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Latin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Latin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Latin().setVisible(true);

			}
		});
	}

	private void renameToLatin(int a) {
		int s = 0;
		for (String e : fileName.list()) {

			if (new File(pathAdaptation() + e).isFile()) {
				String latinFileName = null;
				String file = e.substring(0, e.indexOf('.'));

				if (a == 0) {
					latinFileName = FileNameChecking.removeNonLatin(file);
					if (file.length() == latinFileName.length()) {
						s++;

					}
				} else {

					if (a == 1) {
						latinFileName = FileNameChecking.changeToLatin(file);

					}
					if (a == 2) {
						latinFileName = FileNameChecking.removeNonLatin(file);

					}
					if (a == 3) {
						latinFileName = FileNameChecking.removeNonLatin(FileNameChecking.changeToLatin(file));

					}

					new File(pathAdaptation() + e)
							.renameTo(new File(pathAdaptation() + latinFileName + e.substring(e.indexOf('.'))));
				}
			}
		}
		if (fileName.list().length == s) {
			textMouseOn.setText(instructions[6]);
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JList jList1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTextArea fileNamesListText;
	private javax.swing.JTextArea textMouseOn;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables

}
